--Запит обчислює загальну суму значень стовпця score з таблиці results для ресурсу з ID 11, конкретного користувача з user_id = '569551d5-edb2-2fc1-87f7-9899ac2d0451', враховуючи лише записи за останні 7 днів, і повертає одне значення total_score.
SELECT SUM(score) AS total_score
FROM results
WHERE resource_id = 11
  AND user_id = '569551d5-edb2-2fc1-87f7-9899ac2d0451'
  AND date >= CURRENT_DATE - INTERVAL '7 days'

---------------
| total_score | 
---------------
| 189         | 
---------------

--Запит поверне всі записи з user_whitelist, пов’язані з user_accounts, які належать до resource 30, де admin_internal_id має довжину, відмінну від 26 символів, упорядковані за датою створення (від нових до старих).
SELECT *
FROM user_whitelist uw
INNER JOIN user_accounts ua ON ua.id = uw.user_account_id
WHERE ua.resource_id=30
  AND char_length(admin_internal_id) != 26
ORDER BY uw.creation_date DESC 

-------------------------------------------------------------------------------------------------------
| id | user_account_id  | admin_internal_id | creation_date       | resource_id | internal_id | name  |
-------------------------------------------------------------------------------------------------------
| 32 | 101              | ADM_12345         | 2024-03-10 15:30:00 | 11          | U1001       | Roman |
-------------------------------------------------------------------------------------------------------
| 23 | 43               | ADM_XYZ           | 2024-03-06 18:45:00 | 65          | U1023       | Anna  |
-------------------------------------------------------------------------------------------------------

--Запит повертає список унікальних комбінацій ролей користувачів, кількість користувачів з кожною такою комбінацією та список їх user_id, але з обмеженням на відображення, якщо користувачів надто багато.
SELECT role_combination,
       COUNT(DISTINCT user_id) AS count_users,
       CASE
           WHEN COUNT(DISTINCT user_id) > 50 THEN ARRAY ['Too much ids for display']
           ELSE ARRAY_AGG(DISTINCT user_id::text)
       END AS user_ids
FROM
  (SELECT ur.user_id,
          ARRAY_AGG(r.id || ':' || r.name
                    ORDER BY r.name) AS role_combination
   FROM user_roles ur
   JOIN ROLES r ON ur.role_id = r.id
   GROUP BY ur.user_id) subquery
GROUP BY role_combination
ORDER BY count_users DESC

----------------------------------------------------------------------
| role_combination      | count_users | user_ids                     |
----------------------------------------------------------------------
| {2:Admin,3:Team Lead} | 365         | {"Too much ids for display"} |
----------------------------------------------------------------------
| {1:Guest}             | 13          | {106,34}                     |
----------------------------------------------------------------------

--Запит повертає список подарунків, надісланих за останні 3 дні, із зазначенням ресурсу, ідентифікаторів відправника та одержувачки, а також актуального облікового запису дівчинки.
SELECT r.name AS RESOURCE ,
       g.admin_internal_id AS admin_internal_id ,
       g.user_internal_id AS user_internal_id ,
       ua.internal_id user_internal_id_true
FROM gifts g
LEFT JOIN user_accounts ua ON ua.id = g.girl_account_id
LEFT JOIN resources r ON r.id = ua.resource_id
WHERE g.date_sent::date >= (now() - interval '3 day')::date
  AND g.date_sent::date <= now()::date

----------------------------------------------------------------------------
| resource  | admin_internal_id | user_internal_id | user_internal_id_true |
----------------------------------------------------------------------------
| TechStore | 365               | 394655           | 39667434              |
----------------------------------------------------------------------------
| EcoMarket | 4513              | 8643689          | 4324986               |
----------------------------------------------------------------------------

--Запит вибирає всі колонки з таблиці snapshots, конвертує date у часовий пояс UTC, фільтрує записи за вказаною датою (2025-01-29), конкретним user_account_id = 1918, відсутністю type_id, сортує результати за датою у спадному порядку та повертає їх.
SELECT *,
       s.date AT TIME ZONE 'UTC'
FROM snapshots s
WHERE s.date AT TIME ZONE 'UTC' >= '2025-01-29 00:00:00'
  AND s.date AT TIME ZONE 'UTC' <= '2025-01-29 23:59:59'
  AND user_account_id = 1918
  AND type_id IS NULL
ORDER BY "date" DESC

----------------------------------------------------------------------------------------------
| id      | user_account_id | date                   | score | type_id | timezone            |
----------------------------------------------------------------------------------------------
| 9820500 | 1918            | 2025-01-29 01:00:00+01 | 0.00  | NULL    | 2025-01-29 00:00:00 |
----------------------------------------------------------------------------------------------

--Запит вибирає ідентифікатор, статус і значення поля subid (із JSON-даних) з таблиці responses для записів, де subid точно збігається з '1civrh3jkh', і сортує результати за спаданням дати створення.
SELECT r.ID,
       r.status,
       r.DATA :: JSON -> 'subid' AS subid -- робота з ключем, перевірка, є таке поле в json
FROM responses r
WHERE r.DATA ->> 'subid' like '1civrh3jkh' -- робота зі значенням, добуває точне значення з json
ORDER BY r.creation_date DESC

-------------------------------
| id  | status | subid        | 
-------------------------------
| 416 | 2      | "1civrh3jkh" | 
-------------------------------

--Запит повертає всі неперевірені (CHECKED = FALSE) повідомлення з таблиці dialog_messages, у значенні (value) яких є 'hi'.
SELECT *
FROM dialog_messages
WHERE value LIKE 'hi'
  AND CHECKED=FALSE

-----------------------------------------------
| id  | time                   | type | value |
-----------------------------------------------
| 416 | 2025-03-10 14:47:15+01 | 108  | hi    |
-----------------------------------------------

--Запит повертає унікальні значення key з result_types для активних чатів, де system_id = 15
SELECT rt.key
FROM active_chat ac
INNER JOIN result_types rt ON rt.id = ac.type
WHERE rt.system_id = 15
GROUP BY rt.key

------------
| key      | 
------------
| session  | 
------------
| tracking | 
------------

--Запит повертає всі записи з таблиці log, де user_id дорівнює 13025 або 12509, а дата (date) знаходиться в інтервалі з 4 березня 2024 року по 8 березня 2024 року (включно).
SELECT *
FROM log l
WHERE user_id IN (13025,
                  12509)
  AND date BETWEEN '2024-03-04 00:00:00 +00:00' AND '2024-03-08 00:00:00 +00:00'

----------------------------------------------------------
| id      | user_id | date                   | system_id | 
----------------------------------------------------------
| 9820500 | 1918    | 2025-01-29 01:00:00+01 | 34        |
----------------------------------------------------------

--Запит вибирає всі записи з таблиці accounts, де значення в полі deleted дорівнює TRUE, а поле team_id не є NULL.
SELECT *
FROM accounts
WHERE deleted IS TRUE
  AND team_id IS NOT NULL

------------------------------------------------------
| id      | user_id | deleted | system_id |  team_id |
------------------------------------------------------
| 9820500 | 1918    | t       | 34        | 345      |
------------------------------------------------------
